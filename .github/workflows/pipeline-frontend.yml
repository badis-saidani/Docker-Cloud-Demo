name: Frontend CI/CD Pipeline

on:
  push:
    branches:
      - main
    paths:
      - 'demo-ui/**'  # Trigger only when changes are made in the frontend directory

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout Code
      - name: Checkout Frontend Code
        uses: actions/checkout@v4
        with:
          path: demo-ui

      # 2. Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

	# Debug Step: List Root Directory
      - name: List Root Directory
        run: ls -la
        working-directory: ./

      # Debug Step: List demo-ui Directory
      - name: List demo-ui Directory
        run: ls -la
        working-directory: ./demo-ui

	# Step 3: Navigate to demo-ui directory
      - name: Change Directory
        run: cd demo-ui

      # 3. Install Dependencies
      - name: Install Dependencies
        working-directory: demo-ui
        run: |
          npm install

      # 4. Build Angular Application
      - name: Build Angular Application
        working-directory: demo-ui
        run: |
          npm run build --prod

      # 5. Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 6. Build Docker Image
      - name: Build Frontend Docker Image
        working-directory: demo-ui
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/demo-ui:latest .

      # 7. Push Docker Image to Docker Hub
      - name: Push Frontend Docker Image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/demo-ui:latest

      # 8. Deploy Frontend to EC2
      - name: Deploy Frontend to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            
            # Pull the latest frontend image
            docker pull ${{ secrets.DOCKER_USERNAME }}/demo-ui:latest

            # Stop and remove existing frontend container if it exists
            docker stop demo-ui || true
            docker rm demo-ui || true

            # Run the frontend container
            docker run -d --name demo-ui -p 80:80 ${{ secrets.DOCKER_USERNAME }}/demo-ui:latest
